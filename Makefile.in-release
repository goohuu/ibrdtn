#
# Makefile for IBR-DTN
#
# @author Johannes Morgenroth <morgenro@ibr.cs.tu-bs.de>
#

prefix=@prefix@
exec_prefix=@exec_prefix@

# SVN Version
SVNDEF := -D'SVN_REV="$(shell cat REVISION)"'

# 64bit fix
CFLAGS += -fPIC $(SVNDEF) @CXXFLAGS@

# all libraries needed
IBRCOMMON_LIB_PATH = @srcdir@/ibrcommon/ibrcommon/.libs
LIBS = @LIBS@ -librcommon -L$(IBRCOMMON_LIB_PATH) -L@builddir@/lib

# flags for library search path
CXXFLAGS = @CXXFLAGS@
LDFLAGS += @LDFLAGS@ $(LIBS)
RPATH = -Wl,-rpath-link=$(STAGING_DIR)/usr/lib -Wl,-rpath,${exec_prefix}/lib:@builddir@/lib:$(IBRCOMMON_LIB_PATH):./

# modules
MODULES:=apps apps/c_api_examples apps/DTNTun api utils data streams core net daemon

APPS:=ping send recv inbox outbox tunnel

DATA_MODS:=utils data
DATA_SRC = $(foreach mod,$(DATA_MODS), $(wildcard @srcdir@/src/$(mod)/*.cpp))
DATA_OBJ = $(patsubst @srcdir@/src/%, @builddir@/obj/%, $(patsubst src/%, obj/%, $(patsubst %.cpp, %.o, $(DATA_SRC) ) ) )

API_MODS:=streams api
API_SRC = $(foreach mod,$(API_MODS), $(wildcard @srcdir@/src/$(mod)/*.cpp))
API_OBJ = $(patsubst @srcdir@/src/%, @builddir@/obj/%, $(patsubst src/%, obj/%, $(patsubst %.cpp, %.o, $(API_SRC) ) ) )

DAEMON_MODS:=net core daemon
DAEMON_SRC = $(foreach mod,$(DAEMON_MODS), $(wildcard @srcdir@/src/$(mod)/*.cpp))
DAEMON_OBJ = $(patsubst @srcdir@/src/%, @builddir@/obj/%, $(patsubst src/%, obj/%, $(patsubst %.cpp, %.o, $(DAEMON_SRC) ) ) )

# Main target
all: ibrcommon daemon apps

# create a build directory
builddirs:
	mkdir -p bin lib $(foreach dir,$(MODULES),@builddir@/obj/$(dir))
	
libraries: libdata libclient

apps: $(foreach app,$(APPS),dtn$(app))

@builddir@/obj/%.o: @srcdir@/src/%.cpp
	$(CXX) -c $(CFLAGS) -I@srcdir@/ibrcommon -I@srcdir@/include $< -o $@
	
libdata: builddirs $(DATA_OBJ)
	$(CXX) $(CFLAGS) -I@srcdir@/ibrcommon -I@srcdir@/include $(LDFLAGS) \
		-shared $(DATA_OBJ) -o "@builddir@/lib/libibrdtn-data.so"

libclient: libdata $(API_OBJ)
	$(CXX) $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-shared $(API_OBJ) -o "@builddir@/lib/libibrdtn-client.so"

dtn%: libdata libclient @builddir@/obj/apps/dtn%.o
	$(CXX) $(CFLAGS) -I@srcdir@/include $(LDFLAGS) $(RPATH) \
		-librdtn-data -librdtn-client @builddir@/obj/apps/$@.o -o "@builddir@/bin/$@"
		
daemon: libdata libclient $(DAEMON_OBJ)
	$(CXX) $(CFLAGS) -I@srcdir@/include $(LDFLAGS) $(RPATH) \
		-librdtn-data -librdtn-client $(DAEMON_OBJ) -o "@builddir@/bin/dtnd"
		
cdtnping_sync: libdata libclient 
	$(CC) -c $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-o @builddir@/obj/apps/c_api_examples/cdtnping_sync.o \
		@srcdir@/src/apps/c_api_examples/dtnping_sync.c
	$(CC) $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-L@builddir@/lib/ \
		-librdtn-data -librdtn-client \
		@builddir@/obj/apps/c_api_examples/cdtnping_sync.o \
		-o "@builddir@/bin/cdtnping_sync"
	

cdtnping_async: libdata libclient 
	$(CC) -c $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-o @builddir@/obj/apps/c_api_examples/cdtnping_async.o \
		@srcdir@/src/apps/c_api_examples/dtnping_async.c
	$(CC) $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-L@builddir@/lib/ \
		-librdtn-data -librdtn-client \
		@builddir@/obj/apps/c_api_examples/cdtnping_async.o \
		-o "@builddir@/bin/cdtnping_async"

dtntun: libdata libclient 
	$(CC) -c $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-o @builddir@/obj/apps/DTNTun/dtntun.o \
		@srcdir@/src/apps/DTNTun/dtntun.c
	$(CC) -c $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-o @builddir@/obj/apps/DTNTun/receiver.o \
		@srcdir@/src/apps/DTNTun/receiver.c
	$(CC) -c $(CFLAGS) -I@srcdir@/include $(LDFLAGS) \
		-o @builddir@/obj/apps/DTNTun/tun.o \
		@srcdir@/src/apps/DTNTun/tun.c
	$(CC) $(CFLAGS) -I@srcdir@/include $(LDFLAGS) $(RPATH) \
		-L@builddir@/lib/ \
		-librdtn-data -librdtn-client \
		@builddir@/obj/apps/DTNTun/dtntun.o \
		@builddir@/obj/apps/DTNTun/receiver.o \
		@builddir@/obj/apps/DTNTun/tun.o \
		-o "@builddir@/bin/dtntun"

# delete all object, library and binary files
clean:
	rm -rf @builddir@/obj
	rm -rf @builddir@/lib
	rm -rf @builddir@/bin

# makes a full cleanup of the source directory
distclean: clean
	rm -rf Makefile
	rm -rf include/ibrdtn/config.h

# main install target
install: install-common install-lib install-apps
	cp @builddir@/bin/dtnd @prefix@/bin
	
# main uninstall target
uninstall: uninstall-common uninstall-lib uninstall-apps
	rm -rf @prefix@/bin/dtnd
	rm -rf @includedir@/ibrdtn

# install all apps listed in variable APPS
install-apps: $(foreach app,$(APPS),install-dtn$(app))
install-dtn%:
	cp @builddir@/bin/$(@:install-dtn%=dtn%) @prefix@/bin

# uninstall all apps listed in variable APPS
uninstall-apps: $(foreach app,$(APPS),uninstall-dtn$(app))
uninstall-dtn%:
	rm -rf @prefix@/bin/$(@:uninstall-dtn%=dtn%)
	
# install all libraries of IBR-DTN
install-lib:
	cp @builddir@/lib/*.so @libdir@
	chmod 755 @libdir@/libibrdtn-*.so
	
# uninstall all libraries of IBR-DTN
uninstall-lib:
	rm -rf ${exec_prefix}/lib/libibrdtn-*.so

# install all development files for the IBR-DTN
install-dev: install-lib
	mkdir -p @includedir@/ibrdtn
	cp -R @srcdir@/include/ibrdtn/api @includedir@/ibrdtn
	cp -R @srcdir@/include/ibrdtn/data @includedir@/ibrdtn
	cp -R @srcdir@/include/ibrdtn/streams @includedir@/ibrdtn
	cp -R @srcdir@/include/ibrdtn/utils @includedir@/ibrdtn
	cp @srcdir@/include/ibrdtn/config.h @includedir@/ibrdtn
	cp @srcdir@/include/ibrdtn/default.h @includedir@/ibrdtn

# build the ibrcommon library
.PHONY: ibrcommon
ibrcommon:
	make -C ibrcommon

# install the IBR Common C++ Library
install-common:
	make -C ibrcommon install

# uninstall the IBR Common C++ Library
uninstall-common:
	make -C ibrcommon uninstall
	
