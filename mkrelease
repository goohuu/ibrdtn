#!/bin/bash
#

# check version
if [ "$1" == "" ]; then
	VERSION=test
else
	VERSION=$1
fi

# check target path
if [ "$3" == "" ]; then
	TARGET=..
else
	TARGET=$3
fi

# check revision
if [ "$2" == "" ]; then
	REVISION="none"
else
	REVISION=$2
fi

FQN=ibrdtn-$VERSION
if [ "$REVISION" != "none" ]; then
	FQN+="-r$REVISION"
fi

RELEASE_DIR=$TARGET/$FQN

echo "copy prerequisits"
mkdir $RELEASE_DIR
cp configure.in $RELEASE_DIR/
cp Makefile.in-release $RELEASE_DIR/Makefile.in

if [ "$REVISION" != "none" ]; then
	echo $REVISION > $RELEASE_DIR/REVISION
fi


# copy include
echo "copy include"
cp -R include/ $RELEASE_DIR/
rm -rf $RELEASE_DIR/include/testsuite
rm $RELEASE_DIR/include/ibrdtn/config.h

# copy source
echo "copy source"
cp -R src/ install-sh $RELEASE_DIR/
rm -rf $RELEASE_DIR/src/testsuite

# copy ibrcommon
mkdir $RELEASE_DIR/ibrcommon
echo "ibrcommon files"
cp -R ibrcommon \
	$RELEASE_DIR

# copy default database
#echo "copy default database"
#cp database-clean.db $RELEASE_DIR/database.db

# copy doxygen
echo "doxygen"
cp api.doxyfile $RELEASE_DIR/

# copy default config
echo "default config"
mkdir $RELEASE_DIR/etc
cp etc/default-config.ini $RELEASE_DIR/etc/default.ini

# copy LICENSE
echo "copy license"
cp LICENSE $RELEASE_DIR/

# run autoconf
echo "run autoconf ibrcommon"
cd $RELEASE_DIR/ibrcommon
autoreconf
rm -rf autom4te.cache

echo "run autoconf ibrdtn"
cd ..
autoheader
autoconf --include=include
rm configure.in
rm -rf autom4te.cache


# remove all .svn directories
echo "remove all .svn directories"
rm -rf `find . -name .svn`

# make doxygen for API
#mkdir doc
#doxygen api.doxyfile
#rm api.doxyfile

# make a archive
echo "make a archive"
cd ..
tar czf $FQN.tar.gz $FQN/

