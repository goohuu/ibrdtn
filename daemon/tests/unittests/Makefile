# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/unittests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/ibrdtnd
pkgincludedir = $(includedir)/ibrdtnd
pkglibdir = $(libdir)/ibrdtnd
pkglibexecdir = $(libexecdir)/ibrdtnd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 =  
am__append_2 = -lcurl  
#am__append_3 = 
#am__append_4 = 
check_PROGRAMS = unittest$(EXEEXT)
TESTS = unittest$(EXEEXT)
subdir = tests/unittests
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ibrdtn.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/version.inc \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_unittest_OBJECTS = unittest-Main.$(OBJEXT) \
	unittest-UDPConvergenceLayerTest.$(OBJEXT) \
	unittest-BundleSummaryTest.$(OBJEXT) \
	unittest-SQLiteBundleStorageTest.$(OBJEXT) \
	unittest-LOWPANConvergenceLayerTest.$(OBJEXT) \
	unittest-NeighborRoutingExtensionTest.$(OBJEXT) \
	unittest-HTTPConvergenceLayerTest.$(OBJEXT) \
	unittest-TimeEventTest.$(OBJEXT) \
	unittest-TCPConvergenceLayerTest.$(OBJEXT) \
	unittest-ConnectionEventTest.$(OBJEXT) \
	unittest-BundleExpiredEventTest.$(OBJEXT) \
	unittest-EchoWorkerTest.$(OBJEXT) \
	unittest-NodeEventTest.$(OBJEXT) \
	unittest-ClientHandlerTest.$(OBJEXT) \
	unittest-CustodyEventTest.$(OBJEXT) \
	unittest-FloodRoutingExtensionTest.$(OBJEXT) \
	unittest-SummaryVectorTest.$(OBJEXT) \
	unittest-EventDebuggerTest.$(OBJEXT) \
	unittest-WallClockTest.$(OBJEXT) \
	unittest-BundleStorageTest.$(OBJEXT) \
	unittest-GlobalEventTest.$(OBJEXT) \
	unittest-DiscoveryAgentTest.$(OBJEXT) \
	unittest-QueueBundleEventTest.$(OBJEXT) \
	unittest-DevNullTest.$(OBJEXT) \
	unittest-ComponentTest.$(OBJEXT) \
	unittest-ConfigurationTest.$(OBJEXT) \
	unittest-EpidemicRoutingExtensionTest.$(OBJEXT) \
	unittest-StaticRoutingExtensionTest.$(OBJEXT) \
	unittest-EventTest.$(OBJEXT) unittest-BundleCoreTest.$(OBJEXT) \
	unittest-SQLiteConfigureTest.$(OBJEXT) \
	unittest-StatusReportGeneratorTest.$(OBJEXT) \
	unittest-DiscoveryAnnouncementTest.$(OBJEXT) \
	unittest-TransferCompletedEventTest.$(OBJEXT) \
	unittest-SimpleBundleStorageTest.$(OBJEXT) \
	unittest-EventReceiverTest.$(OBJEXT) \
	unittest-RequeueBundleEventTest.$(OBJEXT) \
	unittest-BundleEventTest.$(OBJEXT) \
	unittest-RetransmissionExtensionTest.$(OBJEXT) \
	unittest-DiscoveryServiceTest.$(OBJEXT) \
	unittest-BundleReceivedEventTest.$(OBJEXT) \
	unittest-NodeTest.$(OBJEXT) unittest-DebuggerTest.$(OBJEXT) \
	unittest-NotifierTest.$(OBJEXT) \
	unittest-StatisticLoggerTest.$(OBJEXT) \
	unittest-NeighborDatabaseTest.$(OBJEXT) \
	unittest-TransferAbortedEventTest.$(OBJEXT) \
	unittest-ConnectionManagerTest.$(OBJEXT) \
	unittest-BaseRouterTest.$(OBJEXT) \
	unittest-BundleGeneratedEventTest.$(OBJEXT) \
	unittest-AbstractWorkerTest.$(OBJEXT) \
	unittest-IPNDAgentTest.$(OBJEXT) \
	unittest-EventSwitchTest.$(OBJEXT)
unittest_OBJECTS = $(am_unittest_OBJECTS)
unittest_DEPENDENCIES = ../../src/libdaemon.la
unittest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(unittest_CXXFLAGS) \
	$(CXXFLAGS) $(unittest_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(unittest_SOURCES)
DIST_SOURCES = $(unittest_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/missing --run autoconf
AUTOHEADER = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/missing --run autoheader
AUTOMAKE = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = /usr/bin/cppunit-config
CPPUNIT_LIBS = -lcppunit -ldl
CURL_CFLAGS =  
CURL_LIBS = -lcurl  
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g3 -ggdb -Wall -Wextra
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lrt 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NL_CFLAGS =  
NL_LIBS = -lnl  
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ibrdtnd
PACKAGE_BUGREPORT = morgenro@ibr.cs.tu-bs.de
PACKAGE_NAME = ibrdtnd
PACKAGE_STRING = ibrdtnd 0.5.0
PACKAGE_TARNAME = ibrdtnd
PACKAGE_URL = 
PACKAGE_VERSION = 0.5.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
VERSION = 0.5.0
abs_builddir = /home/morgenro/workspace/ibrdtn-trunk/daemon/tests/unittests
abs_srcdir = /home/morgenro/workspace/ibrdtn-trunk/daemon/tests/unittests
abs_top_builddir = /home/morgenro/workspace/ibrdtn-trunk/daemon
abs_top_srcdir = /home/morgenro/workspace/ibrdtn-trunk/daemon
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
ibrdtn_CFLAGS = -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrcommon-0.4 -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn/.libs/ibrcommon-0.4/include -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn-0.4 -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn/.libs/ibrdtn-0.4/include -I/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon/ibrcommon-0.4 -I/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon/ibrcommon/.libs/ibrcommon-0.4/include -I/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon   -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn
ibrdtn_LIBS = -L/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn/.libs -L/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon/ibrcommon/.libs -librdtn -librcommon -lpthread -lssl -lcrypto -lnl  
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/morgenro/workspace/ibrdtn-trunk/daemon/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_HEADERS = \
	UDPConvergenceLayerTest.hh \
	BundleSummaryTest.hh \
	SQLiteBundleStorageTest.hh \
	LOWPANConvergenceLayerTest.hh \
	NeighborRoutingExtensionTest.hh \
	HTTPConvergenceLayerTest.hh \
	TimeEventTest.hh \
	TCPConvergenceLayerTest.hh \
	ConnectionEventTest.hh \
	BundleExpiredEventTest.hh \
	EchoWorkerTest.hh \
	NodeEventTest.hh \
	ClientHandlerTest.hh \
	CustodyEventTest.hh \
	FloodRoutingExtensionTest.hh \
	SummaryVectorTest.hh \
	EventDebuggerTest.hh \
	WallClockTest.hh \
	BundleStorageTest.hh \
	GlobalEventTest.hh \
	DiscoveryAgentTest.hh \
	QueueBundleEventTest.hh \
	DevNullTest.hh \
	ComponentTest.hh \
	ConfigurationTest.hh \
	EpidemicRoutingExtensionTest.hh \
	StaticRoutingExtensionTest.hh \
	EventTest.hh \
	BundleCoreTest.hh \
	SQLiteConfigureTest.hh \
	StatusReportGeneratorTest.hh \
	DiscoveryAnnouncementTest.hh \
	TransferCompletedEventTest.hh \
	SimpleBundleStorageTest.hh \
	EventReceiverTest.hh \
	RequeueBundleEventTest.hh \
	BundleEventTest.hh \
	RetransmissionExtensionTest.hh \
	DiscoveryServiceTest.hh \
	BundleReceivedEventTest.hh \
	NodeTest.hh \
	DebuggerTest.hh \
	NotifierTest.hh \
	StatisticLoggerTest.hh \
	NeighborDatabaseTest.hh \
	TransferAbortedEventTest.hh \
	ConnectionManagerTest.hh \
	BaseRouterTest.hh \
	BundleGeneratedEventTest.hh \
	AbstractWorkerTest.hh \
	IPNDAgentTest.hh \
	EventSwitchTest.hh

unittest_SOURCES = \
	Main.cpp \
	UDPConvergenceLayerTest.cpp \
	BundleSummaryTest.cpp \
	SQLiteBundleStorageTest.cpp \
	LOWPANConvergenceLayerTest.cpp \
	NeighborRoutingExtensionTest.cpp \
	HTTPConvergenceLayerTest.cpp \
	TimeEventTest.cpp \
	TCPConvergenceLayerTest.cpp \
	ConnectionEventTest.cpp \
	BundleExpiredEventTest.cpp \
	EchoWorkerTest.cpp \
	NodeEventTest.cpp \
	ClientHandlerTest.cpp \
	CustodyEventTest.cpp \
	FloodRoutingExtensionTest.cpp \
	SummaryVectorTest.cpp \
	EventDebuggerTest.cpp \
	WallClockTest.cpp \
	BundleStorageTest.cpp \
	GlobalEventTest.cpp \
	DiscoveryAgentTest.cpp \
	QueueBundleEventTest.cpp \
	DevNullTest.cpp \
	ComponentTest.cpp \
	ConfigurationTest.cpp \
	EpidemicRoutingExtensionTest.cpp \
	StaticRoutingExtensionTest.cpp \
	EventTest.cpp \
	BundleCoreTest.cpp \
	SQLiteConfigureTest.cpp \
	StatusReportGeneratorTest.cpp \
	DiscoveryAnnouncementTest.cpp \
	TransferCompletedEventTest.cpp \
	SimpleBundleStorageTest.cpp \
	EventReceiverTest.cpp \
	RequeueBundleEventTest.cpp \
	BundleEventTest.cpp \
	RetransmissionExtensionTest.cpp \
	DiscoveryServiceTest.cpp \
	BundleReceivedEventTest.cpp \
	NodeTest.cpp \
	DebuggerTest.cpp \
	NotifierTest.cpp \
	StatisticLoggerTest.cpp \
	NeighborDatabaseTest.cpp \
	TransferAbortedEventTest.cpp \
	ConnectionManagerTest.cpp \
	BaseRouterTest.cpp \
	BundleGeneratedEventTest.cpp \
	AbstractWorkerTest.cpp \
	IPNDAgentTest.cpp \
	EventSwitchTest.cpp


# what flags you want to pass to the C compiler & linker
AM_CPPFLAGS = -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrcommon-0.4 -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn/.libs/ibrcommon-0.4/include -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn-0.4 -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn/.libs/ibrdtn-0.4/include -I/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon/ibrcommon-0.4 -I/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon/ibrcommon/.libs/ibrcommon-0.4/include -I/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon   -I/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn  -Wall $(am__append_1) \
	$(am__append_3)
AM_LDFLAGS = -L/home/morgenro/workspace/ibrdtn-trunk/daemon/../ibrdtn/ibrdtn/.libs -L/home/morgenro/workspace/ibrdtn-trunk/ibrdtn/../ibrcommon/ibrcommon/.libs -librdtn -librcommon -lpthread -lssl -lcrypto -lnl   -lcppunit -ldl $(am__append_2) \
	$(am__append_4)
INCLUDES = -I../.. -I../../tests/unittests
unittest_CXXFLAGS = ${AM_CPPFLAGS} ${CPPUNIT_CFLAGS} -Wall
unittest_LDFLAGS = ${AM_LDFLAGS} ${CPPUNIT_LIBS}
unittest_LDADD = ../../src/libdaemon.la
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/unittests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/unittests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
unittest$(EXEEXT): $(unittest_OBJECTS) $(unittest_DEPENDENCIES) 
	@rm -f unittest$(EXEEXT)
	$(unittest_LINK) $(unittest_OBJECTS) $(unittest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/unittest-AbstractWorkerTest.Po
include ./$(DEPDIR)/unittest-BaseRouterTest.Po
include ./$(DEPDIR)/unittest-BundleCoreTest.Po
include ./$(DEPDIR)/unittest-BundleEventTest.Po
include ./$(DEPDIR)/unittest-BundleExpiredEventTest.Po
include ./$(DEPDIR)/unittest-BundleGeneratedEventTest.Po
include ./$(DEPDIR)/unittest-BundleReceivedEventTest.Po
include ./$(DEPDIR)/unittest-BundleStorageTest.Po
include ./$(DEPDIR)/unittest-BundleSummaryTest.Po
include ./$(DEPDIR)/unittest-ClientHandlerTest.Po
include ./$(DEPDIR)/unittest-ComponentTest.Po
include ./$(DEPDIR)/unittest-ConfigurationTest.Po
include ./$(DEPDIR)/unittest-ConnectionEventTest.Po
include ./$(DEPDIR)/unittest-ConnectionManagerTest.Po
include ./$(DEPDIR)/unittest-CustodyEventTest.Po
include ./$(DEPDIR)/unittest-DebuggerTest.Po
include ./$(DEPDIR)/unittest-DevNullTest.Po
include ./$(DEPDIR)/unittest-DiscoveryAgentTest.Po
include ./$(DEPDIR)/unittest-DiscoveryAnnouncementTest.Po
include ./$(DEPDIR)/unittest-DiscoveryServiceTest.Po
include ./$(DEPDIR)/unittest-EchoWorkerTest.Po
include ./$(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Po
include ./$(DEPDIR)/unittest-EventDebuggerTest.Po
include ./$(DEPDIR)/unittest-EventReceiverTest.Po
include ./$(DEPDIR)/unittest-EventSwitchTest.Po
include ./$(DEPDIR)/unittest-EventTest.Po
include ./$(DEPDIR)/unittest-FloodRoutingExtensionTest.Po
include ./$(DEPDIR)/unittest-GlobalEventTest.Po
include ./$(DEPDIR)/unittest-HTTPConvergenceLayerTest.Po
include ./$(DEPDIR)/unittest-IPNDAgentTest.Po
include ./$(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Po
include ./$(DEPDIR)/unittest-Main.Po
include ./$(DEPDIR)/unittest-NeighborDatabaseTest.Po
include ./$(DEPDIR)/unittest-NeighborRoutingExtensionTest.Po
include ./$(DEPDIR)/unittest-NodeEventTest.Po
include ./$(DEPDIR)/unittest-NodeTest.Po
include ./$(DEPDIR)/unittest-NotifierTest.Po
include ./$(DEPDIR)/unittest-QueueBundleEventTest.Po
include ./$(DEPDIR)/unittest-RequeueBundleEventTest.Po
include ./$(DEPDIR)/unittest-RetransmissionExtensionTest.Po
include ./$(DEPDIR)/unittest-SQLiteBundleStorageTest.Po
include ./$(DEPDIR)/unittest-SQLiteConfigureTest.Po
include ./$(DEPDIR)/unittest-SimpleBundleStorageTest.Po
include ./$(DEPDIR)/unittest-StaticRoutingExtensionTest.Po
include ./$(DEPDIR)/unittest-StatisticLoggerTest.Po
include ./$(DEPDIR)/unittest-StatusReportGeneratorTest.Po
include ./$(DEPDIR)/unittest-SummaryVectorTest.Po
include ./$(DEPDIR)/unittest-TCPConvergenceLayerTest.Po
include ./$(DEPDIR)/unittest-TimeEventTest.Po
include ./$(DEPDIR)/unittest-TransferAbortedEventTest.Po
include ./$(DEPDIR)/unittest-TransferCompletedEventTest.Po
include ./$(DEPDIR)/unittest-UDPConvergenceLayerTest.Po
include ./$(DEPDIR)/unittest-WallClockTest.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

unittest-Main.o: Main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Main.o -MD -MP -MF $(DEPDIR)/unittest-Main.Tpo -c -o unittest-Main.o `test -f 'Main.cpp' || echo '$(srcdir)/'`Main.cpp
	$(am__mv) $(DEPDIR)/unittest-Main.Tpo $(DEPDIR)/unittest-Main.Po
#	source='Main.cpp' object='unittest-Main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Main.o `test -f 'Main.cpp' || echo '$(srcdir)/'`Main.cpp

unittest-Main.obj: Main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-Main.obj -MD -MP -MF $(DEPDIR)/unittest-Main.Tpo -c -o unittest-Main.obj `if test -f 'Main.cpp'; then $(CYGPATH_W) 'Main.cpp'; else $(CYGPATH_W) '$(srcdir)/Main.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-Main.Tpo $(DEPDIR)/unittest-Main.Po
#	source='Main.cpp' object='unittest-Main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-Main.obj `if test -f 'Main.cpp'; then $(CYGPATH_W) 'Main.cpp'; else $(CYGPATH_W) '$(srcdir)/Main.cpp'; fi`

unittest-UDPConvergenceLayerTest.o: UDPConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-UDPConvergenceLayerTest.o -MD -MP -MF $(DEPDIR)/unittest-UDPConvergenceLayerTest.Tpo -c -o unittest-UDPConvergenceLayerTest.o `test -f 'UDPConvergenceLayerTest.cpp' || echo '$(srcdir)/'`UDPConvergenceLayerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-UDPConvergenceLayerTest.Tpo $(DEPDIR)/unittest-UDPConvergenceLayerTest.Po
#	source='UDPConvergenceLayerTest.cpp' object='unittest-UDPConvergenceLayerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-UDPConvergenceLayerTest.o `test -f 'UDPConvergenceLayerTest.cpp' || echo '$(srcdir)/'`UDPConvergenceLayerTest.cpp

unittest-UDPConvergenceLayerTest.obj: UDPConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-UDPConvergenceLayerTest.obj -MD -MP -MF $(DEPDIR)/unittest-UDPConvergenceLayerTest.Tpo -c -o unittest-UDPConvergenceLayerTest.obj `if test -f 'UDPConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'UDPConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/UDPConvergenceLayerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-UDPConvergenceLayerTest.Tpo $(DEPDIR)/unittest-UDPConvergenceLayerTest.Po
#	source='UDPConvergenceLayerTest.cpp' object='unittest-UDPConvergenceLayerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-UDPConvergenceLayerTest.obj `if test -f 'UDPConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'UDPConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/UDPConvergenceLayerTest.cpp'; fi`

unittest-BundleSummaryTest.o: BundleSummaryTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleSummaryTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleSummaryTest.Tpo -c -o unittest-BundleSummaryTest.o `test -f 'BundleSummaryTest.cpp' || echo '$(srcdir)/'`BundleSummaryTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleSummaryTest.Tpo $(DEPDIR)/unittest-BundleSummaryTest.Po
#	source='BundleSummaryTest.cpp' object='unittest-BundleSummaryTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleSummaryTest.o `test -f 'BundleSummaryTest.cpp' || echo '$(srcdir)/'`BundleSummaryTest.cpp

unittest-BundleSummaryTest.obj: BundleSummaryTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleSummaryTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleSummaryTest.Tpo -c -o unittest-BundleSummaryTest.obj `if test -f 'BundleSummaryTest.cpp'; then $(CYGPATH_W) 'BundleSummaryTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleSummaryTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleSummaryTest.Tpo $(DEPDIR)/unittest-BundleSummaryTest.Po
#	source='BundleSummaryTest.cpp' object='unittest-BundleSummaryTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleSummaryTest.obj `if test -f 'BundleSummaryTest.cpp'; then $(CYGPATH_W) 'BundleSummaryTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleSummaryTest.cpp'; fi`

unittest-SQLiteBundleStorageTest.o: SQLiteBundleStorageTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SQLiteBundleStorageTest.o -MD -MP -MF $(DEPDIR)/unittest-SQLiteBundleStorageTest.Tpo -c -o unittest-SQLiteBundleStorageTest.o `test -f 'SQLiteBundleStorageTest.cpp' || echo '$(srcdir)/'`SQLiteBundleStorageTest.cpp
	$(am__mv) $(DEPDIR)/unittest-SQLiteBundleStorageTest.Tpo $(DEPDIR)/unittest-SQLiteBundleStorageTest.Po
#	source='SQLiteBundleStorageTest.cpp' object='unittest-SQLiteBundleStorageTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SQLiteBundleStorageTest.o `test -f 'SQLiteBundleStorageTest.cpp' || echo '$(srcdir)/'`SQLiteBundleStorageTest.cpp

unittest-SQLiteBundleStorageTest.obj: SQLiteBundleStorageTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SQLiteBundleStorageTest.obj -MD -MP -MF $(DEPDIR)/unittest-SQLiteBundleStorageTest.Tpo -c -o unittest-SQLiteBundleStorageTest.obj `if test -f 'SQLiteBundleStorageTest.cpp'; then $(CYGPATH_W) 'SQLiteBundleStorageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SQLiteBundleStorageTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-SQLiteBundleStorageTest.Tpo $(DEPDIR)/unittest-SQLiteBundleStorageTest.Po
#	source='SQLiteBundleStorageTest.cpp' object='unittest-SQLiteBundleStorageTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SQLiteBundleStorageTest.obj `if test -f 'SQLiteBundleStorageTest.cpp'; then $(CYGPATH_W) 'SQLiteBundleStorageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SQLiteBundleStorageTest.cpp'; fi`

unittest-LOWPANConvergenceLayerTest.o: LOWPANConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-LOWPANConvergenceLayerTest.o -MD -MP -MF $(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Tpo -c -o unittest-LOWPANConvergenceLayerTest.o `test -f 'LOWPANConvergenceLayerTest.cpp' || echo '$(srcdir)/'`LOWPANConvergenceLayerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Tpo $(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Po
#	source='LOWPANConvergenceLayerTest.cpp' object='unittest-LOWPANConvergenceLayerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-LOWPANConvergenceLayerTest.o `test -f 'LOWPANConvergenceLayerTest.cpp' || echo '$(srcdir)/'`LOWPANConvergenceLayerTest.cpp

unittest-LOWPANConvergenceLayerTest.obj: LOWPANConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-LOWPANConvergenceLayerTest.obj -MD -MP -MF $(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Tpo -c -o unittest-LOWPANConvergenceLayerTest.obj `if test -f 'LOWPANConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'LOWPANConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/LOWPANConvergenceLayerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Tpo $(DEPDIR)/unittest-LOWPANConvergenceLayerTest.Po
#	source='LOWPANConvergenceLayerTest.cpp' object='unittest-LOWPANConvergenceLayerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-LOWPANConvergenceLayerTest.obj `if test -f 'LOWPANConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'LOWPANConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/LOWPANConvergenceLayerTest.cpp'; fi`

unittest-NeighborRoutingExtensionTest.o: NeighborRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NeighborRoutingExtensionTest.o -MD -MP -MF $(DEPDIR)/unittest-NeighborRoutingExtensionTest.Tpo -c -o unittest-NeighborRoutingExtensionTest.o `test -f 'NeighborRoutingExtensionTest.cpp' || echo '$(srcdir)/'`NeighborRoutingExtensionTest.cpp
	$(am__mv) $(DEPDIR)/unittest-NeighborRoutingExtensionTest.Tpo $(DEPDIR)/unittest-NeighborRoutingExtensionTest.Po
#	source='NeighborRoutingExtensionTest.cpp' object='unittest-NeighborRoutingExtensionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NeighborRoutingExtensionTest.o `test -f 'NeighborRoutingExtensionTest.cpp' || echo '$(srcdir)/'`NeighborRoutingExtensionTest.cpp

unittest-NeighborRoutingExtensionTest.obj: NeighborRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NeighborRoutingExtensionTest.obj -MD -MP -MF $(DEPDIR)/unittest-NeighborRoutingExtensionTest.Tpo -c -o unittest-NeighborRoutingExtensionTest.obj `if test -f 'NeighborRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'NeighborRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NeighborRoutingExtensionTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-NeighborRoutingExtensionTest.Tpo $(DEPDIR)/unittest-NeighborRoutingExtensionTest.Po
#	source='NeighborRoutingExtensionTest.cpp' object='unittest-NeighborRoutingExtensionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NeighborRoutingExtensionTest.obj `if test -f 'NeighborRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'NeighborRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NeighborRoutingExtensionTest.cpp'; fi`

unittest-HTTPConvergenceLayerTest.o: HTTPConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-HTTPConvergenceLayerTest.o -MD -MP -MF $(DEPDIR)/unittest-HTTPConvergenceLayerTest.Tpo -c -o unittest-HTTPConvergenceLayerTest.o `test -f 'HTTPConvergenceLayerTest.cpp' || echo '$(srcdir)/'`HTTPConvergenceLayerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-HTTPConvergenceLayerTest.Tpo $(DEPDIR)/unittest-HTTPConvergenceLayerTest.Po
#	source='HTTPConvergenceLayerTest.cpp' object='unittest-HTTPConvergenceLayerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-HTTPConvergenceLayerTest.o `test -f 'HTTPConvergenceLayerTest.cpp' || echo '$(srcdir)/'`HTTPConvergenceLayerTest.cpp

unittest-HTTPConvergenceLayerTest.obj: HTTPConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-HTTPConvergenceLayerTest.obj -MD -MP -MF $(DEPDIR)/unittest-HTTPConvergenceLayerTest.Tpo -c -o unittest-HTTPConvergenceLayerTest.obj `if test -f 'HTTPConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'HTTPConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/HTTPConvergenceLayerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-HTTPConvergenceLayerTest.Tpo $(DEPDIR)/unittest-HTTPConvergenceLayerTest.Po
#	source='HTTPConvergenceLayerTest.cpp' object='unittest-HTTPConvergenceLayerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-HTTPConvergenceLayerTest.obj `if test -f 'HTTPConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'HTTPConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/HTTPConvergenceLayerTest.cpp'; fi`

unittest-TimeEventTest.o: TimeEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TimeEventTest.o -MD -MP -MF $(DEPDIR)/unittest-TimeEventTest.Tpo -c -o unittest-TimeEventTest.o `test -f 'TimeEventTest.cpp' || echo '$(srcdir)/'`TimeEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-TimeEventTest.Tpo $(DEPDIR)/unittest-TimeEventTest.Po
#	source='TimeEventTest.cpp' object='unittest-TimeEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TimeEventTest.o `test -f 'TimeEventTest.cpp' || echo '$(srcdir)/'`TimeEventTest.cpp

unittest-TimeEventTest.obj: TimeEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TimeEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-TimeEventTest.Tpo -c -o unittest-TimeEventTest.obj `if test -f 'TimeEventTest.cpp'; then $(CYGPATH_W) 'TimeEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TimeEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-TimeEventTest.Tpo $(DEPDIR)/unittest-TimeEventTest.Po
#	source='TimeEventTest.cpp' object='unittest-TimeEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TimeEventTest.obj `if test -f 'TimeEventTest.cpp'; then $(CYGPATH_W) 'TimeEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TimeEventTest.cpp'; fi`

unittest-TCPConvergenceLayerTest.o: TCPConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TCPConvergenceLayerTest.o -MD -MP -MF $(DEPDIR)/unittest-TCPConvergenceLayerTest.Tpo -c -o unittest-TCPConvergenceLayerTest.o `test -f 'TCPConvergenceLayerTest.cpp' || echo '$(srcdir)/'`TCPConvergenceLayerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-TCPConvergenceLayerTest.Tpo $(DEPDIR)/unittest-TCPConvergenceLayerTest.Po
#	source='TCPConvergenceLayerTest.cpp' object='unittest-TCPConvergenceLayerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TCPConvergenceLayerTest.o `test -f 'TCPConvergenceLayerTest.cpp' || echo '$(srcdir)/'`TCPConvergenceLayerTest.cpp

unittest-TCPConvergenceLayerTest.obj: TCPConvergenceLayerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TCPConvergenceLayerTest.obj -MD -MP -MF $(DEPDIR)/unittest-TCPConvergenceLayerTest.Tpo -c -o unittest-TCPConvergenceLayerTest.obj `if test -f 'TCPConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'TCPConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TCPConvergenceLayerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-TCPConvergenceLayerTest.Tpo $(DEPDIR)/unittest-TCPConvergenceLayerTest.Po
#	source='TCPConvergenceLayerTest.cpp' object='unittest-TCPConvergenceLayerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TCPConvergenceLayerTest.obj `if test -f 'TCPConvergenceLayerTest.cpp'; then $(CYGPATH_W) 'TCPConvergenceLayerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TCPConvergenceLayerTest.cpp'; fi`

unittest-ConnectionEventTest.o: ConnectionEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ConnectionEventTest.o -MD -MP -MF $(DEPDIR)/unittest-ConnectionEventTest.Tpo -c -o unittest-ConnectionEventTest.o `test -f 'ConnectionEventTest.cpp' || echo '$(srcdir)/'`ConnectionEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-ConnectionEventTest.Tpo $(DEPDIR)/unittest-ConnectionEventTest.Po
#	source='ConnectionEventTest.cpp' object='unittest-ConnectionEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ConnectionEventTest.o `test -f 'ConnectionEventTest.cpp' || echo '$(srcdir)/'`ConnectionEventTest.cpp

unittest-ConnectionEventTest.obj: ConnectionEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ConnectionEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-ConnectionEventTest.Tpo -c -o unittest-ConnectionEventTest.obj `if test -f 'ConnectionEventTest.cpp'; then $(CYGPATH_W) 'ConnectionEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-ConnectionEventTest.Tpo $(DEPDIR)/unittest-ConnectionEventTest.Po
#	source='ConnectionEventTest.cpp' object='unittest-ConnectionEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ConnectionEventTest.obj `if test -f 'ConnectionEventTest.cpp'; then $(CYGPATH_W) 'ConnectionEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionEventTest.cpp'; fi`

unittest-BundleExpiredEventTest.o: BundleExpiredEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleExpiredEventTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleExpiredEventTest.Tpo -c -o unittest-BundleExpiredEventTest.o `test -f 'BundleExpiredEventTest.cpp' || echo '$(srcdir)/'`BundleExpiredEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleExpiredEventTest.Tpo $(DEPDIR)/unittest-BundleExpiredEventTest.Po
#	source='BundleExpiredEventTest.cpp' object='unittest-BundleExpiredEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleExpiredEventTest.o `test -f 'BundleExpiredEventTest.cpp' || echo '$(srcdir)/'`BundleExpiredEventTest.cpp

unittest-BundleExpiredEventTest.obj: BundleExpiredEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleExpiredEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleExpiredEventTest.Tpo -c -o unittest-BundleExpiredEventTest.obj `if test -f 'BundleExpiredEventTest.cpp'; then $(CYGPATH_W) 'BundleExpiredEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleExpiredEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleExpiredEventTest.Tpo $(DEPDIR)/unittest-BundleExpiredEventTest.Po
#	source='BundleExpiredEventTest.cpp' object='unittest-BundleExpiredEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleExpiredEventTest.obj `if test -f 'BundleExpiredEventTest.cpp'; then $(CYGPATH_W) 'BundleExpiredEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleExpiredEventTest.cpp'; fi`

unittest-EchoWorkerTest.o: EchoWorkerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EchoWorkerTest.o -MD -MP -MF $(DEPDIR)/unittest-EchoWorkerTest.Tpo -c -o unittest-EchoWorkerTest.o `test -f 'EchoWorkerTest.cpp' || echo '$(srcdir)/'`EchoWorkerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-EchoWorkerTest.Tpo $(DEPDIR)/unittest-EchoWorkerTest.Po
#	source='EchoWorkerTest.cpp' object='unittest-EchoWorkerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EchoWorkerTest.o `test -f 'EchoWorkerTest.cpp' || echo '$(srcdir)/'`EchoWorkerTest.cpp

unittest-EchoWorkerTest.obj: EchoWorkerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EchoWorkerTest.obj -MD -MP -MF $(DEPDIR)/unittest-EchoWorkerTest.Tpo -c -o unittest-EchoWorkerTest.obj `if test -f 'EchoWorkerTest.cpp'; then $(CYGPATH_W) 'EchoWorkerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EchoWorkerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-EchoWorkerTest.Tpo $(DEPDIR)/unittest-EchoWorkerTest.Po
#	source='EchoWorkerTest.cpp' object='unittest-EchoWorkerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EchoWorkerTest.obj `if test -f 'EchoWorkerTest.cpp'; then $(CYGPATH_W) 'EchoWorkerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EchoWorkerTest.cpp'; fi`

unittest-NodeEventTest.o: NodeEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NodeEventTest.o -MD -MP -MF $(DEPDIR)/unittest-NodeEventTest.Tpo -c -o unittest-NodeEventTest.o `test -f 'NodeEventTest.cpp' || echo '$(srcdir)/'`NodeEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-NodeEventTest.Tpo $(DEPDIR)/unittest-NodeEventTest.Po
#	source='NodeEventTest.cpp' object='unittest-NodeEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NodeEventTest.o `test -f 'NodeEventTest.cpp' || echo '$(srcdir)/'`NodeEventTest.cpp

unittest-NodeEventTest.obj: NodeEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NodeEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-NodeEventTest.Tpo -c -o unittest-NodeEventTest.obj `if test -f 'NodeEventTest.cpp'; then $(CYGPATH_W) 'NodeEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NodeEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-NodeEventTest.Tpo $(DEPDIR)/unittest-NodeEventTest.Po
#	source='NodeEventTest.cpp' object='unittest-NodeEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NodeEventTest.obj `if test -f 'NodeEventTest.cpp'; then $(CYGPATH_W) 'NodeEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NodeEventTest.cpp'; fi`

unittest-ClientHandlerTest.o: ClientHandlerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ClientHandlerTest.o -MD -MP -MF $(DEPDIR)/unittest-ClientHandlerTest.Tpo -c -o unittest-ClientHandlerTest.o `test -f 'ClientHandlerTest.cpp' || echo '$(srcdir)/'`ClientHandlerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-ClientHandlerTest.Tpo $(DEPDIR)/unittest-ClientHandlerTest.Po
#	source='ClientHandlerTest.cpp' object='unittest-ClientHandlerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ClientHandlerTest.o `test -f 'ClientHandlerTest.cpp' || echo '$(srcdir)/'`ClientHandlerTest.cpp

unittest-ClientHandlerTest.obj: ClientHandlerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ClientHandlerTest.obj -MD -MP -MF $(DEPDIR)/unittest-ClientHandlerTest.Tpo -c -o unittest-ClientHandlerTest.obj `if test -f 'ClientHandlerTest.cpp'; then $(CYGPATH_W) 'ClientHandlerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ClientHandlerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-ClientHandlerTest.Tpo $(DEPDIR)/unittest-ClientHandlerTest.Po
#	source='ClientHandlerTest.cpp' object='unittest-ClientHandlerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ClientHandlerTest.obj `if test -f 'ClientHandlerTest.cpp'; then $(CYGPATH_W) 'ClientHandlerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ClientHandlerTest.cpp'; fi`

unittest-CustodyEventTest.o: CustodyEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-CustodyEventTest.o -MD -MP -MF $(DEPDIR)/unittest-CustodyEventTest.Tpo -c -o unittest-CustodyEventTest.o `test -f 'CustodyEventTest.cpp' || echo '$(srcdir)/'`CustodyEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-CustodyEventTest.Tpo $(DEPDIR)/unittest-CustodyEventTest.Po
#	source='CustodyEventTest.cpp' object='unittest-CustodyEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-CustodyEventTest.o `test -f 'CustodyEventTest.cpp' || echo '$(srcdir)/'`CustodyEventTest.cpp

unittest-CustodyEventTest.obj: CustodyEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-CustodyEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-CustodyEventTest.Tpo -c -o unittest-CustodyEventTest.obj `if test -f 'CustodyEventTest.cpp'; then $(CYGPATH_W) 'CustodyEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/CustodyEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-CustodyEventTest.Tpo $(DEPDIR)/unittest-CustodyEventTest.Po
#	source='CustodyEventTest.cpp' object='unittest-CustodyEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-CustodyEventTest.obj `if test -f 'CustodyEventTest.cpp'; then $(CYGPATH_W) 'CustodyEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/CustodyEventTest.cpp'; fi`

unittest-FloodRoutingExtensionTest.o: FloodRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-FloodRoutingExtensionTest.o -MD -MP -MF $(DEPDIR)/unittest-FloodRoutingExtensionTest.Tpo -c -o unittest-FloodRoutingExtensionTest.o `test -f 'FloodRoutingExtensionTest.cpp' || echo '$(srcdir)/'`FloodRoutingExtensionTest.cpp
	$(am__mv) $(DEPDIR)/unittest-FloodRoutingExtensionTest.Tpo $(DEPDIR)/unittest-FloodRoutingExtensionTest.Po
#	source='FloodRoutingExtensionTest.cpp' object='unittest-FloodRoutingExtensionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-FloodRoutingExtensionTest.o `test -f 'FloodRoutingExtensionTest.cpp' || echo '$(srcdir)/'`FloodRoutingExtensionTest.cpp

unittest-FloodRoutingExtensionTest.obj: FloodRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-FloodRoutingExtensionTest.obj -MD -MP -MF $(DEPDIR)/unittest-FloodRoutingExtensionTest.Tpo -c -o unittest-FloodRoutingExtensionTest.obj `if test -f 'FloodRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'FloodRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/FloodRoutingExtensionTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-FloodRoutingExtensionTest.Tpo $(DEPDIR)/unittest-FloodRoutingExtensionTest.Po
#	source='FloodRoutingExtensionTest.cpp' object='unittest-FloodRoutingExtensionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-FloodRoutingExtensionTest.obj `if test -f 'FloodRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'FloodRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/FloodRoutingExtensionTest.cpp'; fi`

unittest-SummaryVectorTest.o: SummaryVectorTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SummaryVectorTest.o -MD -MP -MF $(DEPDIR)/unittest-SummaryVectorTest.Tpo -c -o unittest-SummaryVectorTest.o `test -f 'SummaryVectorTest.cpp' || echo '$(srcdir)/'`SummaryVectorTest.cpp
	$(am__mv) $(DEPDIR)/unittest-SummaryVectorTest.Tpo $(DEPDIR)/unittest-SummaryVectorTest.Po
#	source='SummaryVectorTest.cpp' object='unittest-SummaryVectorTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SummaryVectorTest.o `test -f 'SummaryVectorTest.cpp' || echo '$(srcdir)/'`SummaryVectorTest.cpp

unittest-SummaryVectorTest.obj: SummaryVectorTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SummaryVectorTest.obj -MD -MP -MF $(DEPDIR)/unittest-SummaryVectorTest.Tpo -c -o unittest-SummaryVectorTest.obj `if test -f 'SummaryVectorTest.cpp'; then $(CYGPATH_W) 'SummaryVectorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SummaryVectorTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-SummaryVectorTest.Tpo $(DEPDIR)/unittest-SummaryVectorTest.Po
#	source='SummaryVectorTest.cpp' object='unittest-SummaryVectorTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SummaryVectorTest.obj `if test -f 'SummaryVectorTest.cpp'; then $(CYGPATH_W) 'SummaryVectorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SummaryVectorTest.cpp'; fi`

unittest-EventDebuggerTest.o: EventDebuggerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventDebuggerTest.o -MD -MP -MF $(DEPDIR)/unittest-EventDebuggerTest.Tpo -c -o unittest-EventDebuggerTest.o `test -f 'EventDebuggerTest.cpp' || echo '$(srcdir)/'`EventDebuggerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-EventDebuggerTest.Tpo $(DEPDIR)/unittest-EventDebuggerTest.Po
#	source='EventDebuggerTest.cpp' object='unittest-EventDebuggerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventDebuggerTest.o `test -f 'EventDebuggerTest.cpp' || echo '$(srcdir)/'`EventDebuggerTest.cpp

unittest-EventDebuggerTest.obj: EventDebuggerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventDebuggerTest.obj -MD -MP -MF $(DEPDIR)/unittest-EventDebuggerTest.Tpo -c -o unittest-EventDebuggerTest.obj `if test -f 'EventDebuggerTest.cpp'; then $(CYGPATH_W) 'EventDebuggerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventDebuggerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-EventDebuggerTest.Tpo $(DEPDIR)/unittest-EventDebuggerTest.Po
#	source='EventDebuggerTest.cpp' object='unittest-EventDebuggerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventDebuggerTest.obj `if test -f 'EventDebuggerTest.cpp'; then $(CYGPATH_W) 'EventDebuggerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventDebuggerTest.cpp'; fi`

unittest-WallClockTest.o: WallClockTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-WallClockTest.o -MD -MP -MF $(DEPDIR)/unittest-WallClockTest.Tpo -c -o unittest-WallClockTest.o `test -f 'WallClockTest.cpp' || echo '$(srcdir)/'`WallClockTest.cpp
	$(am__mv) $(DEPDIR)/unittest-WallClockTest.Tpo $(DEPDIR)/unittest-WallClockTest.Po
#	source='WallClockTest.cpp' object='unittest-WallClockTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-WallClockTest.o `test -f 'WallClockTest.cpp' || echo '$(srcdir)/'`WallClockTest.cpp

unittest-WallClockTest.obj: WallClockTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-WallClockTest.obj -MD -MP -MF $(DEPDIR)/unittest-WallClockTest.Tpo -c -o unittest-WallClockTest.obj `if test -f 'WallClockTest.cpp'; then $(CYGPATH_W) 'WallClockTest.cpp'; else $(CYGPATH_W) '$(srcdir)/WallClockTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-WallClockTest.Tpo $(DEPDIR)/unittest-WallClockTest.Po
#	source='WallClockTest.cpp' object='unittest-WallClockTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-WallClockTest.obj `if test -f 'WallClockTest.cpp'; then $(CYGPATH_W) 'WallClockTest.cpp'; else $(CYGPATH_W) '$(srcdir)/WallClockTest.cpp'; fi`

unittest-BundleStorageTest.o: BundleStorageTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleStorageTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleStorageTest.Tpo -c -o unittest-BundleStorageTest.o `test -f 'BundleStorageTest.cpp' || echo '$(srcdir)/'`BundleStorageTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleStorageTest.Tpo $(DEPDIR)/unittest-BundleStorageTest.Po
#	source='BundleStorageTest.cpp' object='unittest-BundleStorageTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleStorageTest.o `test -f 'BundleStorageTest.cpp' || echo '$(srcdir)/'`BundleStorageTest.cpp

unittest-BundleStorageTest.obj: BundleStorageTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleStorageTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleStorageTest.Tpo -c -o unittest-BundleStorageTest.obj `if test -f 'BundleStorageTest.cpp'; then $(CYGPATH_W) 'BundleStorageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleStorageTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleStorageTest.Tpo $(DEPDIR)/unittest-BundleStorageTest.Po
#	source='BundleStorageTest.cpp' object='unittest-BundleStorageTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleStorageTest.obj `if test -f 'BundleStorageTest.cpp'; then $(CYGPATH_W) 'BundleStorageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleStorageTest.cpp'; fi`

unittest-GlobalEventTest.o: GlobalEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-GlobalEventTest.o -MD -MP -MF $(DEPDIR)/unittest-GlobalEventTest.Tpo -c -o unittest-GlobalEventTest.o `test -f 'GlobalEventTest.cpp' || echo '$(srcdir)/'`GlobalEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-GlobalEventTest.Tpo $(DEPDIR)/unittest-GlobalEventTest.Po
#	source='GlobalEventTest.cpp' object='unittest-GlobalEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-GlobalEventTest.o `test -f 'GlobalEventTest.cpp' || echo '$(srcdir)/'`GlobalEventTest.cpp

unittest-GlobalEventTest.obj: GlobalEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-GlobalEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-GlobalEventTest.Tpo -c -o unittest-GlobalEventTest.obj `if test -f 'GlobalEventTest.cpp'; then $(CYGPATH_W) 'GlobalEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/GlobalEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-GlobalEventTest.Tpo $(DEPDIR)/unittest-GlobalEventTest.Po
#	source='GlobalEventTest.cpp' object='unittest-GlobalEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-GlobalEventTest.obj `if test -f 'GlobalEventTest.cpp'; then $(CYGPATH_W) 'GlobalEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/GlobalEventTest.cpp'; fi`

unittest-DiscoveryAgentTest.o: DiscoveryAgentTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DiscoveryAgentTest.o -MD -MP -MF $(DEPDIR)/unittest-DiscoveryAgentTest.Tpo -c -o unittest-DiscoveryAgentTest.o `test -f 'DiscoveryAgentTest.cpp' || echo '$(srcdir)/'`DiscoveryAgentTest.cpp
	$(am__mv) $(DEPDIR)/unittest-DiscoveryAgentTest.Tpo $(DEPDIR)/unittest-DiscoveryAgentTest.Po
#	source='DiscoveryAgentTest.cpp' object='unittest-DiscoveryAgentTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DiscoveryAgentTest.o `test -f 'DiscoveryAgentTest.cpp' || echo '$(srcdir)/'`DiscoveryAgentTest.cpp

unittest-DiscoveryAgentTest.obj: DiscoveryAgentTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DiscoveryAgentTest.obj -MD -MP -MF $(DEPDIR)/unittest-DiscoveryAgentTest.Tpo -c -o unittest-DiscoveryAgentTest.obj `if test -f 'DiscoveryAgentTest.cpp'; then $(CYGPATH_W) 'DiscoveryAgentTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscoveryAgentTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-DiscoveryAgentTest.Tpo $(DEPDIR)/unittest-DiscoveryAgentTest.Po
#	source='DiscoveryAgentTest.cpp' object='unittest-DiscoveryAgentTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DiscoveryAgentTest.obj `if test -f 'DiscoveryAgentTest.cpp'; then $(CYGPATH_W) 'DiscoveryAgentTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscoveryAgentTest.cpp'; fi`

unittest-QueueBundleEventTest.o: QueueBundleEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-QueueBundleEventTest.o -MD -MP -MF $(DEPDIR)/unittest-QueueBundleEventTest.Tpo -c -o unittest-QueueBundleEventTest.o `test -f 'QueueBundleEventTest.cpp' || echo '$(srcdir)/'`QueueBundleEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-QueueBundleEventTest.Tpo $(DEPDIR)/unittest-QueueBundleEventTest.Po
#	source='QueueBundleEventTest.cpp' object='unittest-QueueBundleEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-QueueBundleEventTest.o `test -f 'QueueBundleEventTest.cpp' || echo '$(srcdir)/'`QueueBundleEventTest.cpp

unittest-QueueBundleEventTest.obj: QueueBundleEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-QueueBundleEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-QueueBundleEventTest.Tpo -c -o unittest-QueueBundleEventTest.obj `if test -f 'QueueBundleEventTest.cpp'; then $(CYGPATH_W) 'QueueBundleEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/QueueBundleEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-QueueBundleEventTest.Tpo $(DEPDIR)/unittest-QueueBundleEventTest.Po
#	source='QueueBundleEventTest.cpp' object='unittest-QueueBundleEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-QueueBundleEventTest.obj `if test -f 'QueueBundleEventTest.cpp'; then $(CYGPATH_W) 'QueueBundleEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/QueueBundleEventTest.cpp'; fi`

unittest-DevNullTest.o: DevNullTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DevNullTest.o -MD -MP -MF $(DEPDIR)/unittest-DevNullTest.Tpo -c -o unittest-DevNullTest.o `test -f 'DevNullTest.cpp' || echo '$(srcdir)/'`DevNullTest.cpp
	$(am__mv) $(DEPDIR)/unittest-DevNullTest.Tpo $(DEPDIR)/unittest-DevNullTest.Po
#	source='DevNullTest.cpp' object='unittest-DevNullTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DevNullTest.o `test -f 'DevNullTest.cpp' || echo '$(srcdir)/'`DevNullTest.cpp

unittest-DevNullTest.obj: DevNullTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DevNullTest.obj -MD -MP -MF $(DEPDIR)/unittest-DevNullTest.Tpo -c -o unittest-DevNullTest.obj `if test -f 'DevNullTest.cpp'; then $(CYGPATH_W) 'DevNullTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DevNullTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-DevNullTest.Tpo $(DEPDIR)/unittest-DevNullTest.Po
#	source='DevNullTest.cpp' object='unittest-DevNullTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DevNullTest.obj `if test -f 'DevNullTest.cpp'; then $(CYGPATH_W) 'DevNullTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DevNullTest.cpp'; fi`

unittest-ComponentTest.o: ComponentTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ComponentTest.o -MD -MP -MF $(DEPDIR)/unittest-ComponentTest.Tpo -c -o unittest-ComponentTest.o `test -f 'ComponentTest.cpp' || echo '$(srcdir)/'`ComponentTest.cpp
	$(am__mv) $(DEPDIR)/unittest-ComponentTest.Tpo $(DEPDIR)/unittest-ComponentTest.Po
#	source='ComponentTest.cpp' object='unittest-ComponentTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ComponentTest.o `test -f 'ComponentTest.cpp' || echo '$(srcdir)/'`ComponentTest.cpp

unittest-ComponentTest.obj: ComponentTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ComponentTest.obj -MD -MP -MF $(DEPDIR)/unittest-ComponentTest.Tpo -c -o unittest-ComponentTest.obj `if test -f 'ComponentTest.cpp'; then $(CYGPATH_W) 'ComponentTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ComponentTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-ComponentTest.Tpo $(DEPDIR)/unittest-ComponentTest.Po
#	source='ComponentTest.cpp' object='unittest-ComponentTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ComponentTest.obj `if test -f 'ComponentTest.cpp'; then $(CYGPATH_W) 'ComponentTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ComponentTest.cpp'; fi`

unittest-ConfigurationTest.o: ConfigurationTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ConfigurationTest.o -MD -MP -MF $(DEPDIR)/unittest-ConfigurationTest.Tpo -c -o unittest-ConfigurationTest.o `test -f 'ConfigurationTest.cpp' || echo '$(srcdir)/'`ConfigurationTest.cpp
	$(am__mv) $(DEPDIR)/unittest-ConfigurationTest.Tpo $(DEPDIR)/unittest-ConfigurationTest.Po
#	source='ConfigurationTest.cpp' object='unittest-ConfigurationTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ConfigurationTest.o `test -f 'ConfigurationTest.cpp' || echo '$(srcdir)/'`ConfigurationTest.cpp

unittest-ConfigurationTest.obj: ConfigurationTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ConfigurationTest.obj -MD -MP -MF $(DEPDIR)/unittest-ConfigurationTest.Tpo -c -o unittest-ConfigurationTest.obj `if test -f 'ConfigurationTest.cpp'; then $(CYGPATH_W) 'ConfigurationTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-ConfigurationTest.Tpo $(DEPDIR)/unittest-ConfigurationTest.Po
#	source='ConfigurationTest.cpp' object='unittest-ConfigurationTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ConfigurationTest.obj `if test -f 'ConfigurationTest.cpp'; then $(CYGPATH_W) 'ConfigurationTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationTest.cpp'; fi`

unittest-EpidemicRoutingExtensionTest.o: EpidemicRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EpidemicRoutingExtensionTest.o -MD -MP -MF $(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Tpo -c -o unittest-EpidemicRoutingExtensionTest.o `test -f 'EpidemicRoutingExtensionTest.cpp' || echo '$(srcdir)/'`EpidemicRoutingExtensionTest.cpp
	$(am__mv) $(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Tpo $(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Po
#	source='EpidemicRoutingExtensionTest.cpp' object='unittest-EpidemicRoutingExtensionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EpidemicRoutingExtensionTest.o `test -f 'EpidemicRoutingExtensionTest.cpp' || echo '$(srcdir)/'`EpidemicRoutingExtensionTest.cpp

unittest-EpidemicRoutingExtensionTest.obj: EpidemicRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EpidemicRoutingExtensionTest.obj -MD -MP -MF $(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Tpo -c -o unittest-EpidemicRoutingExtensionTest.obj `if test -f 'EpidemicRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'EpidemicRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EpidemicRoutingExtensionTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Tpo $(DEPDIR)/unittest-EpidemicRoutingExtensionTest.Po
#	source='EpidemicRoutingExtensionTest.cpp' object='unittest-EpidemicRoutingExtensionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EpidemicRoutingExtensionTest.obj `if test -f 'EpidemicRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'EpidemicRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EpidemicRoutingExtensionTest.cpp'; fi`

unittest-StaticRoutingExtensionTest.o: StaticRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-StaticRoutingExtensionTest.o -MD -MP -MF $(DEPDIR)/unittest-StaticRoutingExtensionTest.Tpo -c -o unittest-StaticRoutingExtensionTest.o `test -f 'StaticRoutingExtensionTest.cpp' || echo '$(srcdir)/'`StaticRoutingExtensionTest.cpp
	$(am__mv) $(DEPDIR)/unittest-StaticRoutingExtensionTest.Tpo $(DEPDIR)/unittest-StaticRoutingExtensionTest.Po
#	source='StaticRoutingExtensionTest.cpp' object='unittest-StaticRoutingExtensionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-StaticRoutingExtensionTest.o `test -f 'StaticRoutingExtensionTest.cpp' || echo '$(srcdir)/'`StaticRoutingExtensionTest.cpp

unittest-StaticRoutingExtensionTest.obj: StaticRoutingExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-StaticRoutingExtensionTest.obj -MD -MP -MF $(DEPDIR)/unittest-StaticRoutingExtensionTest.Tpo -c -o unittest-StaticRoutingExtensionTest.obj `if test -f 'StaticRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'StaticRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/StaticRoutingExtensionTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-StaticRoutingExtensionTest.Tpo $(DEPDIR)/unittest-StaticRoutingExtensionTest.Po
#	source='StaticRoutingExtensionTest.cpp' object='unittest-StaticRoutingExtensionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-StaticRoutingExtensionTest.obj `if test -f 'StaticRoutingExtensionTest.cpp'; then $(CYGPATH_W) 'StaticRoutingExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/StaticRoutingExtensionTest.cpp'; fi`

unittest-EventTest.o: EventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventTest.o -MD -MP -MF $(DEPDIR)/unittest-EventTest.Tpo -c -o unittest-EventTest.o `test -f 'EventTest.cpp' || echo '$(srcdir)/'`EventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-EventTest.Tpo $(DEPDIR)/unittest-EventTest.Po
#	source='EventTest.cpp' object='unittest-EventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventTest.o `test -f 'EventTest.cpp' || echo '$(srcdir)/'`EventTest.cpp

unittest-EventTest.obj: EventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventTest.obj -MD -MP -MF $(DEPDIR)/unittest-EventTest.Tpo -c -o unittest-EventTest.obj `if test -f 'EventTest.cpp'; then $(CYGPATH_W) 'EventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-EventTest.Tpo $(DEPDIR)/unittest-EventTest.Po
#	source='EventTest.cpp' object='unittest-EventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventTest.obj `if test -f 'EventTest.cpp'; then $(CYGPATH_W) 'EventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventTest.cpp'; fi`

unittest-BundleCoreTest.o: BundleCoreTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleCoreTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleCoreTest.Tpo -c -o unittest-BundleCoreTest.o `test -f 'BundleCoreTest.cpp' || echo '$(srcdir)/'`BundleCoreTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleCoreTest.Tpo $(DEPDIR)/unittest-BundleCoreTest.Po
#	source='BundleCoreTest.cpp' object='unittest-BundleCoreTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleCoreTest.o `test -f 'BundleCoreTest.cpp' || echo '$(srcdir)/'`BundleCoreTest.cpp

unittest-BundleCoreTest.obj: BundleCoreTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleCoreTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleCoreTest.Tpo -c -o unittest-BundleCoreTest.obj `if test -f 'BundleCoreTest.cpp'; then $(CYGPATH_W) 'BundleCoreTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleCoreTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleCoreTest.Tpo $(DEPDIR)/unittest-BundleCoreTest.Po
#	source='BundleCoreTest.cpp' object='unittest-BundleCoreTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleCoreTest.obj `if test -f 'BundleCoreTest.cpp'; then $(CYGPATH_W) 'BundleCoreTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleCoreTest.cpp'; fi`

unittest-SQLiteConfigureTest.o: SQLiteConfigureTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SQLiteConfigureTest.o -MD -MP -MF $(DEPDIR)/unittest-SQLiteConfigureTest.Tpo -c -o unittest-SQLiteConfigureTest.o `test -f 'SQLiteConfigureTest.cpp' || echo '$(srcdir)/'`SQLiteConfigureTest.cpp
	$(am__mv) $(DEPDIR)/unittest-SQLiteConfigureTest.Tpo $(DEPDIR)/unittest-SQLiteConfigureTest.Po
#	source='SQLiteConfigureTest.cpp' object='unittest-SQLiteConfigureTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SQLiteConfigureTest.o `test -f 'SQLiteConfigureTest.cpp' || echo '$(srcdir)/'`SQLiteConfigureTest.cpp

unittest-SQLiteConfigureTest.obj: SQLiteConfigureTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SQLiteConfigureTest.obj -MD -MP -MF $(DEPDIR)/unittest-SQLiteConfigureTest.Tpo -c -o unittest-SQLiteConfigureTest.obj `if test -f 'SQLiteConfigureTest.cpp'; then $(CYGPATH_W) 'SQLiteConfigureTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SQLiteConfigureTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-SQLiteConfigureTest.Tpo $(DEPDIR)/unittest-SQLiteConfigureTest.Po
#	source='SQLiteConfigureTest.cpp' object='unittest-SQLiteConfigureTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SQLiteConfigureTest.obj `if test -f 'SQLiteConfigureTest.cpp'; then $(CYGPATH_W) 'SQLiteConfigureTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SQLiteConfigureTest.cpp'; fi`

unittest-StatusReportGeneratorTest.o: StatusReportGeneratorTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-StatusReportGeneratorTest.o -MD -MP -MF $(DEPDIR)/unittest-StatusReportGeneratorTest.Tpo -c -o unittest-StatusReportGeneratorTest.o `test -f 'StatusReportGeneratorTest.cpp' || echo '$(srcdir)/'`StatusReportGeneratorTest.cpp
	$(am__mv) $(DEPDIR)/unittest-StatusReportGeneratorTest.Tpo $(DEPDIR)/unittest-StatusReportGeneratorTest.Po
#	source='StatusReportGeneratorTest.cpp' object='unittest-StatusReportGeneratorTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-StatusReportGeneratorTest.o `test -f 'StatusReportGeneratorTest.cpp' || echo '$(srcdir)/'`StatusReportGeneratorTest.cpp

unittest-StatusReportGeneratorTest.obj: StatusReportGeneratorTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-StatusReportGeneratorTest.obj -MD -MP -MF $(DEPDIR)/unittest-StatusReportGeneratorTest.Tpo -c -o unittest-StatusReportGeneratorTest.obj `if test -f 'StatusReportGeneratorTest.cpp'; then $(CYGPATH_W) 'StatusReportGeneratorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/StatusReportGeneratorTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-StatusReportGeneratorTest.Tpo $(DEPDIR)/unittest-StatusReportGeneratorTest.Po
#	source='StatusReportGeneratorTest.cpp' object='unittest-StatusReportGeneratorTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-StatusReportGeneratorTest.obj `if test -f 'StatusReportGeneratorTest.cpp'; then $(CYGPATH_W) 'StatusReportGeneratorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/StatusReportGeneratorTest.cpp'; fi`

unittest-DiscoveryAnnouncementTest.o: DiscoveryAnnouncementTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DiscoveryAnnouncementTest.o -MD -MP -MF $(DEPDIR)/unittest-DiscoveryAnnouncementTest.Tpo -c -o unittest-DiscoveryAnnouncementTest.o `test -f 'DiscoveryAnnouncementTest.cpp' || echo '$(srcdir)/'`DiscoveryAnnouncementTest.cpp
	$(am__mv) $(DEPDIR)/unittest-DiscoveryAnnouncementTest.Tpo $(DEPDIR)/unittest-DiscoveryAnnouncementTest.Po
#	source='DiscoveryAnnouncementTest.cpp' object='unittest-DiscoveryAnnouncementTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DiscoveryAnnouncementTest.o `test -f 'DiscoveryAnnouncementTest.cpp' || echo '$(srcdir)/'`DiscoveryAnnouncementTest.cpp

unittest-DiscoveryAnnouncementTest.obj: DiscoveryAnnouncementTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DiscoveryAnnouncementTest.obj -MD -MP -MF $(DEPDIR)/unittest-DiscoveryAnnouncementTest.Tpo -c -o unittest-DiscoveryAnnouncementTest.obj `if test -f 'DiscoveryAnnouncementTest.cpp'; then $(CYGPATH_W) 'DiscoveryAnnouncementTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscoveryAnnouncementTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-DiscoveryAnnouncementTest.Tpo $(DEPDIR)/unittest-DiscoveryAnnouncementTest.Po
#	source='DiscoveryAnnouncementTest.cpp' object='unittest-DiscoveryAnnouncementTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DiscoveryAnnouncementTest.obj `if test -f 'DiscoveryAnnouncementTest.cpp'; then $(CYGPATH_W) 'DiscoveryAnnouncementTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscoveryAnnouncementTest.cpp'; fi`

unittest-TransferCompletedEventTest.o: TransferCompletedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TransferCompletedEventTest.o -MD -MP -MF $(DEPDIR)/unittest-TransferCompletedEventTest.Tpo -c -o unittest-TransferCompletedEventTest.o `test -f 'TransferCompletedEventTest.cpp' || echo '$(srcdir)/'`TransferCompletedEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-TransferCompletedEventTest.Tpo $(DEPDIR)/unittest-TransferCompletedEventTest.Po
#	source='TransferCompletedEventTest.cpp' object='unittest-TransferCompletedEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TransferCompletedEventTest.o `test -f 'TransferCompletedEventTest.cpp' || echo '$(srcdir)/'`TransferCompletedEventTest.cpp

unittest-TransferCompletedEventTest.obj: TransferCompletedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TransferCompletedEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-TransferCompletedEventTest.Tpo -c -o unittest-TransferCompletedEventTest.obj `if test -f 'TransferCompletedEventTest.cpp'; then $(CYGPATH_W) 'TransferCompletedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TransferCompletedEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-TransferCompletedEventTest.Tpo $(DEPDIR)/unittest-TransferCompletedEventTest.Po
#	source='TransferCompletedEventTest.cpp' object='unittest-TransferCompletedEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TransferCompletedEventTest.obj `if test -f 'TransferCompletedEventTest.cpp'; then $(CYGPATH_W) 'TransferCompletedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TransferCompletedEventTest.cpp'; fi`

unittest-SimpleBundleStorageTest.o: SimpleBundleStorageTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SimpleBundleStorageTest.o -MD -MP -MF $(DEPDIR)/unittest-SimpleBundleStorageTest.Tpo -c -o unittest-SimpleBundleStorageTest.o `test -f 'SimpleBundleStorageTest.cpp' || echo '$(srcdir)/'`SimpleBundleStorageTest.cpp
	$(am__mv) $(DEPDIR)/unittest-SimpleBundleStorageTest.Tpo $(DEPDIR)/unittest-SimpleBundleStorageTest.Po
#	source='SimpleBundleStorageTest.cpp' object='unittest-SimpleBundleStorageTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SimpleBundleStorageTest.o `test -f 'SimpleBundleStorageTest.cpp' || echo '$(srcdir)/'`SimpleBundleStorageTest.cpp

unittest-SimpleBundleStorageTest.obj: SimpleBundleStorageTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-SimpleBundleStorageTest.obj -MD -MP -MF $(DEPDIR)/unittest-SimpleBundleStorageTest.Tpo -c -o unittest-SimpleBundleStorageTest.obj `if test -f 'SimpleBundleStorageTest.cpp'; then $(CYGPATH_W) 'SimpleBundleStorageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SimpleBundleStorageTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-SimpleBundleStorageTest.Tpo $(DEPDIR)/unittest-SimpleBundleStorageTest.Po
#	source='SimpleBundleStorageTest.cpp' object='unittest-SimpleBundleStorageTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-SimpleBundleStorageTest.obj `if test -f 'SimpleBundleStorageTest.cpp'; then $(CYGPATH_W) 'SimpleBundleStorageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SimpleBundleStorageTest.cpp'; fi`

unittest-EventReceiverTest.o: EventReceiverTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventReceiverTest.o -MD -MP -MF $(DEPDIR)/unittest-EventReceiverTest.Tpo -c -o unittest-EventReceiverTest.o `test -f 'EventReceiverTest.cpp' || echo '$(srcdir)/'`EventReceiverTest.cpp
	$(am__mv) $(DEPDIR)/unittest-EventReceiverTest.Tpo $(DEPDIR)/unittest-EventReceiverTest.Po
#	source='EventReceiverTest.cpp' object='unittest-EventReceiverTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventReceiverTest.o `test -f 'EventReceiverTest.cpp' || echo '$(srcdir)/'`EventReceiverTest.cpp

unittest-EventReceiverTest.obj: EventReceiverTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventReceiverTest.obj -MD -MP -MF $(DEPDIR)/unittest-EventReceiverTest.Tpo -c -o unittest-EventReceiverTest.obj `if test -f 'EventReceiverTest.cpp'; then $(CYGPATH_W) 'EventReceiverTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventReceiverTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-EventReceiverTest.Tpo $(DEPDIR)/unittest-EventReceiverTest.Po
#	source='EventReceiverTest.cpp' object='unittest-EventReceiverTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventReceiverTest.obj `if test -f 'EventReceiverTest.cpp'; then $(CYGPATH_W) 'EventReceiverTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventReceiverTest.cpp'; fi`

unittest-RequeueBundleEventTest.o: RequeueBundleEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-RequeueBundleEventTest.o -MD -MP -MF $(DEPDIR)/unittest-RequeueBundleEventTest.Tpo -c -o unittest-RequeueBundleEventTest.o `test -f 'RequeueBundleEventTest.cpp' || echo '$(srcdir)/'`RequeueBundleEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-RequeueBundleEventTest.Tpo $(DEPDIR)/unittest-RequeueBundleEventTest.Po
#	source='RequeueBundleEventTest.cpp' object='unittest-RequeueBundleEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-RequeueBundleEventTest.o `test -f 'RequeueBundleEventTest.cpp' || echo '$(srcdir)/'`RequeueBundleEventTest.cpp

unittest-RequeueBundleEventTest.obj: RequeueBundleEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-RequeueBundleEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-RequeueBundleEventTest.Tpo -c -o unittest-RequeueBundleEventTest.obj `if test -f 'RequeueBundleEventTest.cpp'; then $(CYGPATH_W) 'RequeueBundleEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/RequeueBundleEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-RequeueBundleEventTest.Tpo $(DEPDIR)/unittest-RequeueBundleEventTest.Po
#	source='RequeueBundleEventTest.cpp' object='unittest-RequeueBundleEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-RequeueBundleEventTest.obj `if test -f 'RequeueBundleEventTest.cpp'; then $(CYGPATH_W) 'RequeueBundleEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/RequeueBundleEventTest.cpp'; fi`

unittest-BundleEventTest.o: BundleEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleEventTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleEventTest.Tpo -c -o unittest-BundleEventTest.o `test -f 'BundleEventTest.cpp' || echo '$(srcdir)/'`BundleEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleEventTest.Tpo $(DEPDIR)/unittest-BundleEventTest.Po
#	source='BundleEventTest.cpp' object='unittest-BundleEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleEventTest.o `test -f 'BundleEventTest.cpp' || echo '$(srcdir)/'`BundleEventTest.cpp

unittest-BundleEventTest.obj: BundleEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleEventTest.Tpo -c -o unittest-BundleEventTest.obj `if test -f 'BundleEventTest.cpp'; then $(CYGPATH_W) 'BundleEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleEventTest.Tpo $(DEPDIR)/unittest-BundleEventTest.Po
#	source='BundleEventTest.cpp' object='unittest-BundleEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleEventTest.obj `if test -f 'BundleEventTest.cpp'; then $(CYGPATH_W) 'BundleEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleEventTest.cpp'; fi`

unittest-RetransmissionExtensionTest.o: RetransmissionExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-RetransmissionExtensionTest.o -MD -MP -MF $(DEPDIR)/unittest-RetransmissionExtensionTest.Tpo -c -o unittest-RetransmissionExtensionTest.o `test -f 'RetransmissionExtensionTest.cpp' || echo '$(srcdir)/'`RetransmissionExtensionTest.cpp
	$(am__mv) $(DEPDIR)/unittest-RetransmissionExtensionTest.Tpo $(DEPDIR)/unittest-RetransmissionExtensionTest.Po
#	source='RetransmissionExtensionTest.cpp' object='unittest-RetransmissionExtensionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-RetransmissionExtensionTest.o `test -f 'RetransmissionExtensionTest.cpp' || echo '$(srcdir)/'`RetransmissionExtensionTest.cpp

unittest-RetransmissionExtensionTest.obj: RetransmissionExtensionTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-RetransmissionExtensionTest.obj -MD -MP -MF $(DEPDIR)/unittest-RetransmissionExtensionTest.Tpo -c -o unittest-RetransmissionExtensionTest.obj `if test -f 'RetransmissionExtensionTest.cpp'; then $(CYGPATH_W) 'RetransmissionExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/RetransmissionExtensionTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-RetransmissionExtensionTest.Tpo $(DEPDIR)/unittest-RetransmissionExtensionTest.Po
#	source='RetransmissionExtensionTest.cpp' object='unittest-RetransmissionExtensionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-RetransmissionExtensionTest.obj `if test -f 'RetransmissionExtensionTest.cpp'; then $(CYGPATH_W) 'RetransmissionExtensionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/RetransmissionExtensionTest.cpp'; fi`

unittest-DiscoveryServiceTest.o: DiscoveryServiceTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DiscoveryServiceTest.o -MD -MP -MF $(DEPDIR)/unittest-DiscoveryServiceTest.Tpo -c -o unittest-DiscoveryServiceTest.o `test -f 'DiscoveryServiceTest.cpp' || echo '$(srcdir)/'`DiscoveryServiceTest.cpp
	$(am__mv) $(DEPDIR)/unittest-DiscoveryServiceTest.Tpo $(DEPDIR)/unittest-DiscoveryServiceTest.Po
#	source='DiscoveryServiceTest.cpp' object='unittest-DiscoveryServiceTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DiscoveryServiceTest.o `test -f 'DiscoveryServiceTest.cpp' || echo '$(srcdir)/'`DiscoveryServiceTest.cpp

unittest-DiscoveryServiceTest.obj: DiscoveryServiceTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DiscoveryServiceTest.obj -MD -MP -MF $(DEPDIR)/unittest-DiscoveryServiceTest.Tpo -c -o unittest-DiscoveryServiceTest.obj `if test -f 'DiscoveryServiceTest.cpp'; then $(CYGPATH_W) 'DiscoveryServiceTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscoveryServiceTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-DiscoveryServiceTest.Tpo $(DEPDIR)/unittest-DiscoveryServiceTest.Po
#	source='DiscoveryServiceTest.cpp' object='unittest-DiscoveryServiceTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DiscoveryServiceTest.obj `if test -f 'DiscoveryServiceTest.cpp'; then $(CYGPATH_W) 'DiscoveryServiceTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscoveryServiceTest.cpp'; fi`

unittest-BundleReceivedEventTest.o: BundleReceivedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleReceivedEventTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleReceivedEventTest.Tpo -c -o unittest-BundleReceivedEventTest.o `test -f 'BundleReceivedEventTest.cpp' || echo '$(srcdir)/'`BundleReceivedEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleReceivedEventTest.Tpo $(DEPDIR)/unittest-BundleReceivedEventTest.Po
#	source='BundleReceivedEventTest.cpp' object='unittest-BundleReceivedEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleReceivedEventTest.o `test -f 'BundleReceivedEventTest.cpp' || echo '$(srcdir)/'`BundleReceivedEventTest.cpp

unittest-BundleReceivedEventTest.obj: BundleReceivedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleReceivedEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleReceivedEventTest.Tpo -c -o unittest-BundleReceivedEventTest.obj `if test -f 'BundleReceivedEventTest.cpp'; then $(CYGPATH_W) 'BundleReceivedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleReceivedEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleReceivedEventTest.Tpo $(DEPDIR)/unittest-BundleReceivedEventTest.Po
#	source='BundleReceivedEventTest.cpp' object='unittest-BundleReceivedEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleReceivedEventTest.obj `if test -f 'BundleReceivedEventTest.cpp'; then $(CYGPATH_W) 'BundleReceivedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleReceivedEventTest.cpp'; fi`

unittest-NodeTest.o: NodeTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NodeTest.o -MD -MP -MF $(DEPDIR)/unittest-NodeTest.Tpo -c -o unittest-NodeTest.o `test -f 'NodeTest.cpp' || echo '$(srcdir)/'`NodeTest.cpp
	$(am__mv) $(DEPDIR)/unittest-NodeTest.Tpo $(DEPDIR)/unittest-NodeTest.Po
#	source='NodeTest.cpp' object='unittest-NodeTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NodeTest.o `test -f 'NodeTest.cpp' || echo '$(srcdir)/'`NodeTest.cpp

unittest-NodeTest.obj: NodeTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NodeTest.obj -MD -MP -MF $(DEPDIR)/unittest-NodeTest.Tpo -c -o unittest-NodeTest.obj `if test -f 'NodeTest.cpp'; then $(CYGPATH_W) 'NodeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NodeTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-NodeTest.Tpo $(DEPDIR)/unittest-NodeTest.Po
#	source='NodeTest.cpp' object='unittest-NodeTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NodeTest.obj `if test -f 'NodeTest.cpp'; then $(CYGPATH_W) 'NodeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NodeTest.cpp'; fi`

unittest-DebuggerTest.o: DebuggerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DebuggerTest.o -MD -MP -MF $(DEPDIR)/unittest-DebuggerTest.Tpo -c -o unittest-DebuggerTest.o `test -f 'DebuggerTest.cpp' || echo '$(srcdir)/'`DebuggerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-DebuggerTest.Tpo $(DEPDIR)/unittest-DebuggerTest.Po
#	source='DebuggerTest.cpp' object='unittest-DebuggerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DebuggerTest.o `test -f 'DebuggerTest.cpp' || echo '$(srcdir)/'`DebuggerTest.cpp

unittest-DebuggerTest.obj: DebuggerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-DebuggerTest.obj -MD -MP -MF $(DEPDIR)/unittest-DebuggerTest.Tpo -c -o unittest-DebuggerTest.obj `if test -f 'DebuggerTest.cpp'; then $(CYGPATH_W) 'DebuggerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DebuggerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-DebuggerTest.Tpo $(DEPDIR)/unittest-DebuggerTest.Po
#	source='DebuggerTest.cpp' object='unittest-DebuggerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-DebuggerTest.obj `if test -f 'DebuggerTest.cpp'; then $(CYGPATH_W) 'DebuggerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DebuggerTest.cpp'; fi`

unittest-NotifierTest.o: NotifierTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NotifierTest.o -MD -MP -MF $(DEPDIR)/unittest-NotifierTest.Tpo -c -o unittest-NotifierTest.o `test -f 'NotifierTest.cpp' || echo '$(srcdir)/'`NotifierTest.cpp
	$(am__mv) $(DEPDIR)/unittest-NotifierTest.Tpo $(DEPDIR)/unittest-NotifierTest.Po
#	source='NotifierTest.cpp' object='unittest-NotifierTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NotifierTest.o `test -f 'NotifierTest.cpp' || echo '$(srcdir)/'`NotifierTest.cpp

unittest-NotifierTest.obj: NotifierTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NotifierTest.obj -MD -MP -MF $(DEPDIR)/unittest-NotifierTest.Tpo -c -o unittest-NotifierTest.obj `if test -f 'NotifierTest.cpp'; then $(CYGPATH_W) 'NotifierTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NotifierTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-NotifierTest.Tpo $(DEPDIR)/unittest-NotifierTest.Po
#	source='NotifierTest.cpp' object='unittest-NotifierTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NotifierTest.obj `if test -f 'NotifierTest.cpp'; then $(CYGPATH_W) 'NotifierTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NotifierTest.cpp'; fi`

unittest-StatisticLoggerTest.o: StatisticLoggerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-StatisticLoggerTest.o -MD -MP -MF $(DEPDIR)/unittest-StatisticLoggerTest.Tpo -c -o unittest-StatisticLoggerTest.o `test -f 'StatisticLoggerTest.cpp' || echo '$(srcdir)/'`StatisticLoggerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-StatisticLoggerTest.Tpo $(DEPDIR)/unittest-StatisticLoggerTest.Po
#	source='StatisticLoggerTest.cpp' object='unittest-StatisticLoggerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-StatisticLoggerTest.o `test -f 'StatisticLoggerTest.cpp' || echo '$(srcdir)/'`StatisticLoggerTest.cpp

unittest-StatisticLoggerTest.obj: StatisticLoggerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-StatisticLoggerTest.obj -MD -MP -MF $(DEPDIR)/unittest-StatisticLoggerTest.Tpo -c -o unittest-StatisticLoggerTest.obj `if test -f 'StatisticLoggerTest.cpp'; then $(CYGPATH_W) 'StatisticLoggerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/StatisticLoggerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-StatisticLoggerTest.Tpo $(DEPDIR)/unittest-StatisticLoggerTest.Po
#	source='StatisticLoggerTest.cpp' object='unittest-StatisticLoggerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-StatisticLoggerTest.obj `if test -f 'StatisticLoggerTest.cpp'; then $(CYGPATH_W) 'StatisticLoggerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/StatisticLoggerTest.cpp'; fi`

unittest-NeighborDatabaseTest.o: NeighborDatabaseTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NeighborDatabaseTest.o -MD -MP -MF $(DEPDIR)/unittest-NeighborDatabaseTest.Tpo -c -o unittest-NeighborDatabaseTest.o `test -f 'NeighborDatabaseTest.cpp' || echo '$(srcdir)/'`NeighborDatabaseTest.cpp
	$(am__mv) $(DEPDIR)/unittest-NeighborDatabaseTest.Tpo $(DEPDIR)/unittest-NeighborDatabaseTest.Po
#	source='NeighborDatabaseTest.cpp' object='unittest-NeighborDatabaseTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NeighborDatabaseTest.o `test -f 'NeighborDatabaseTest.cpp' || echo '$(srcdir)/'`NeighborDatabaseTest.cpp

unittest-NeighborDatabaseTest.obj: NeighborDatabaseTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-NeighborDatabaseTest.obj -MD -MP -MF $(DEPDIR)/unittest-NeighborDatabaseTest.Tpo -c -o unittest-NeighborDatabaseTest.obj `if test -f 'NeighborDatabaseTest.cpp'; then $(CYGPATH_W) 'NeighborDatabaseTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NeighborDatabaseTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-NeighborDatabaseTest.Tpo $(DEPDIR)/unittest-NeighborDatabaseTest.Po
#	source='NeighborDatabaseTest.cpp' object='unittest-NeighborDatabaseTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-NeighborDatabaseTest.obj `if test -f 'NeighborDatabaseTest.cpp'; then $(CYGPATH_W) 'NeighborDatabaseTest.cpp'; else $(CYGPATH_W) '$(srcdir)/NeighborDatabaseTest.cpp'; fi`

unittest-TransferAbortedEventTest.o: TransferAbortedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TransferAbortedEventTest.o -MD -MP -MF $(DEPDIR)/unittest-TransferAbortedEventTest.Tpo -c -o unittest-TransferAbortedEventTest.o `test -f 'TransferAbortedEventTest.cpp' || echo '$(srcdir)/'`TransferAbortedEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-TransferAbortedEventTest.Tpo $(DEPDIR)/unittest-TransferAbortedEventTest.Po
#	source='TransferAbortedEventTest.cpp' object='unittest-TransferAbortedEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TransferAbortedEventTest.o `test -f 'TransferAbortedEventTest.cpp' || echo '$(srcdir)/'`TransferAbortedEventTest.cpp

unittest-TransferAbortedEventTest.obj: TransferAbortedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-TransferAbortedEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-TransferAbortedEventTest.Tpo -c -o unittest-TransferAbortedEventTest.obj `if test -f 'TransferAbortedEventTest.cpp'; then $(CYGPATH_W) 'TransferAbortedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TransferAbortedEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-TransferAbortedEventTest.Tpo $(DEPDIR)/unittest-TransferAbortedEventTest.Po
#	source='TransferAbortedEventTest.cpp' object='unittest-TransferAbortedEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-TransferAbortedEventTest.obj `if test -f 'TransferAbortedEventTest.cpp'; then $(CYGPATH_W) 'TransferAbortedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/TransferAbortedEventTest.cpp'; fi`

unittest-ConnectionManagerTest.o: ConnectionManagerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ConnectionManagerTest.o -MD -MP -MF $(DEPDIR)/unittest-ConnectionManagerTest.Tpo -c -o unittest-ConnectionManagerTest.o `test -f 'ConnectionManagerTest.cpp' || echo '$(srcdir)/'`ConnectionManagerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-ConnectionManagerTest.Tpo $(DEPDIR)/unittest-ConnectionManagerTest.Po
#	source='ConnectionManagerTest.cpp' object='unittest-ConnectionManagerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ConnectionManagerTest.o `test -f 'ConnectionManagerTest.cpp' || echo '$(srcdir)/'`ConnectionManagerTest.cpp

unittest-ConnectionManagerTest.obj: ConnectionManagerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-ConnectionManagerTest.obj -MD -MP -MF $(DEPDIR)/unittest-ConnectionManagerTest.Tpo -c -o unittest-ConnectionManagerTest.obj `if test -f 'ConnectionManagerTest.cpp'; then $(CYGPATH_W) 'ConnectionManagerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManagerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-ConnectionManagerTest.Tpo $(DEPDIR)/unittest-ConnectionManagerTest.Po
#	source='ConnectionManagerTest.cpp' object='unittest-ConnectionManagerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-ConnectionManagerTest.obj `if test -f 'ConnectionManagerTest.cpp'; then $(CYGPATH_W) 'ConnectionManagerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManagerTest.cpp'; fi`

unittest-BaseRouterTest.o: BaseRouterTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BaseRouterTest.o -MD -MP -MF $(DEPDIR)/unittest-BaseRouterTest.Tpo -c -o unittest-BaseRouterTest.o `test -f 'BaseRouterTest.cpp' || echo '$(srcdir)/'`BaseRouterTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BaseRouterTest.Tpo $(DEPDIR)/unittest-BaseRouterTest.Po
#	source='BaseRouterTest.cpp' object='unittest-BaseRouterTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BaseRouterTest.o `test -f 'BaseRouterTest.cpp' || echo '$(srcdir)/'`BaseRouterTest.cpp

unittest-BaseRouterTest.obj: BaseRouterTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BaseRouterTest.obj -MD -MP -MF $(DEPDIR)/unittest-BaseRouterTest.Tpo -c -o unittest-BaseRouterTest.obj `if test -f 'BaseRouterTest.cpp'; then $(CYGPATH_W) 'BaseRouterTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseRouterTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BaseRouterTest.Tpo $(DEPDIR)/unittest-BaseRouterTest.Po
#	source='BaseRouterTest.cpp' object='unittest-BaseRouterTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BaseRouterTest.obj `if test -f 'BaseRouterTest.cpp'; then $(CYGPATH_W) 'BaseRouterTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseRouterTest.cpp'; fi`

unittest-BundleGeneratedEventTest.o: BundleGeneratedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleGeneratedEventTest.o -MD -MP -MF $(DEPDIR)/unittest-BundleGeneratedEventTest.Tpo -c -o unittest-BundleGeneratedEventTest.o `test -f 'BundleGeneratedEventTest.cpp' || echo '$(srcdir)/'`BundleGeneratedEventTest.cpp
	$(am__mv) $(DEPDIR)/unittest-BundleGeneratedEventTest.Tpo $(DEPDIR)/unittest-BundleGeneratedEventTest.Po
#	source='BundleGeneratedEventTest.cpp' object='unittest-BundleGeneratedEventTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleGeneratedEventTest.o `test -f 'BundleGeneratedEventTest.cpp' || echo '$(srcdir)/'`BundleGeneratedEventTest.cpp

unittest-BundleGeneratedEventTest.obj: BundleGeneratedEventTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-BundleGeneratedEventTest.obj -MD -MP -MF $(DEPDIR)/unittest-BundleGeneratedEventTest.Tpo -c -o unittest-BundleGeneratedEventTest.obj `if test -f 'BundleGeneratedEventTest.cpp'; then $(CYGPATH_W) 'BundleGeneratedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleGeneratedEventTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-BundleGeneratedEventTest.Tpo $(DEPDIR)/unittest-BundleGeneratedEventTest.Po
#	source='BundleGeneratedEventTest.cpp' object='unittest-BundleGeneratedEventTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-BundleGeneratedEventTest.obj `if test -f 'BundleGeneratedEventTest.cpp'; then $(CYGPATH_W) 'BundleGeneratedEventTest.cpp'; else $(CYGPATH_W) '$(srcdir)/BundleGeneratedEventTest.cpp'; fi`

unittest-AbstractWorkerTest.o: AbstractWorkerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-AbstractWorkerTest.o -MD -MP -MF $(DEPDIR)/unittest-AbstractWorkerTest.Tpo -c -o unittest-AbstractWorkerTest.o `test -f 'AbstractWorkerTest.cpp' || echo '$(srcdir)/'`AbstractWorkerTest.cpp
	$(am__mv) $(DEPDIR)/unittest-AbstractWorkerTest.Tpo $(DEPDIR)/unittest-AbstractWorkerTest.Po
#	source='AbstractWorkerTest.cpp' object='unittest-AbstractWorkerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-AbstractWorkerTest.o `test -f 'AbstractWorkerTest.cpp' || echo '$(srcdir)/'`AbstractWorkerTest.cpp

unittest-AbstractWorkerTest.obj: AbstractWorkerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-AbstractWorkerTest.obj -MD -MP -MF $(DEPDIR)/unittest-AbstractWorkerTest.Tpo -c -o unittest-AbstractWorkerTest.obj `if test -f 'AbstractWorkerTest.cpp'; then $(CYGPATH_W) 'AbstractWorkerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/AbstractWorkerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-AbstractWorkerTest.Tpo $(DEPDIR)/unittest-AbstractWorkerTest.Po
#	source='AbstractWorkerTest.cpp' object='unittest-AbstractWorkerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-AbstractWorkerTest.obj `if test -f 'AbstractWorkerTest.cpp'; then $(CYGPATH_W) 'AbstractWorkerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/AbstractWorkerTest.cpp'; fi`

unittest-IPNDAgentTest.o: IPNDAgentTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-IPNDAgentTest.o -MD -MP -MF $(DEPDIR)/unittest-IPNDAgentTest.Tpo -c -o unittest-IPNDAgentTest.o `test -f 'IPNDAgentTest.cpp' || echo '$(srcdir)/'`IPNDAgentTest.cpp
	$(am__mv) $(DEPDIR)/unittest-IPNDAgentTest.Tpo $(DEPDIR)/unittest-IPNDAgentTest.Po
#	source='IPNDAgentTest.cpp' object='unittest-IPNDAgentTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-IPNDAgentTest.o `test -f 'IPNDAgentTest.cpp' || echo '$(srcdir)/'`IPNDAgentTest.cpp

unittest-IPNDAgentTest.obj: IPNDAgentTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-IPNDAgentTest.obj -MD -MP -MF $(DEPDIR)/unittest-IPNDAgentTest.Tpo -c -o unittest-IPNDAgentTest.obj `if test -f 'IPNDAgentTest.cpp'; then $(CYGPATH_W) 'IPNDAgentTest.cpp'; else $(CYGPATH_W) '$(srcdir)/IPNDAgentTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-IPNDAgentTest.Tpo $(DEPDIR)/unittest-IPNDAgentTest.Po
#	source='IPNDAgentTest.cpp' object='unittest-IPNDAgentTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-IPNDAgentTest.obj `if test -f 'IPNDAgentTest.cpp'; then $(CYGPATH_W) 'IPNDAgentTest.cpp'; else $(CYGPATH_W) '$(srcdir)/IPNDAgentTest.cpp'; fi`

unittest-EventSwitchTest.o: EventSwitchTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventSwitchTest.o -MD -MP -MF $(DEPDIR)/unittest-EventSwitchTest.Tpo -c -o unittest-EventSwitchTest.o `test -f 'EventSwitchTest.cpp' || echo '$(srcdir)/'`EventSwitchTest.cpp
	$(am__mv) $(DEPDIR)/unittest-EventSwitchTest.Tpo $(DEPDIR)/unittest-EventSwitchTest.Po
#	source='EventSwitchTest.cpp' object='unittest-EventSwitchTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventSwitchTest.o `test -f 'EventSwitchTest.cpp' || echo '$(srcdir)/'`EventSwitchTest.cpp

unittest-EventSwitchTest.obj: EventSwitchTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -MT unittest-EventSwitchTest.obj -MD -MP -MF $(DEPDIR)/unittest-EventSwitchTest.Tpo -c -o unittest-EventSwitchTest.obj `if test -f 'EventSwitchTest.cpp'; then $(CYGPATH_W) 'EventSwitchTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventSwitchTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/unittest-EventSwitchTest.Tpo $(DEPDIR)/unittest-EventSwitchTest.Po
#	source='EventSwitchTest.cpp' object='unittest-EventSwitchTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unittest_CXXFLAGS) $(CXXFLAGS) -c -o unittest-EventSwitchTest.obj `if test -f 'EventSwitchTest.cpp'; then $(CYGPATH_W) 'EventSwitchTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EventSwitchTest.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
